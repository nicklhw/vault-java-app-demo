version: '3.7'

networks:
  vault-demo:
    ipam:
      driver: default
      config:
        - subnet: "10.5.0.0/16"

services:
  vault:
    profiles: ["backend"]
    depends_on: [ mysql ]
    image: hashicorp/vault-enterprise:latest
    restart: always
    volumes:
      - ./vault:/vault/config:rw
      - ./vault/audit_logs:/var/log/vault:rw
      - /vault/data
    ports:
      - "8200:8200/tcp"
    cap_add:
      - IPC_LOCK
    container_name: vault
    entrypoint: "vault server -config=/vault/config"
    environment:
      - VAULT_LICENSE=${VAULT_LICENSE}
    networks:
      - vault-demo
  mysql:
    profiles: ["backend"]
    image: mysql:8
    container_name: mysql
    restart: always
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306/tcp"
    environment:
      - MYSQL_DATABASE=demo
      - MYSQL_ROOT_PASSWORD=passw0rd
    networks:
      - vault-demo
  spring-vault-demo:
    profiles: ["frontend"]
    image: nicklhw/spring-vault-demo
    container_name: spring-vault-demo
    restart: always
    depends_on: [vault]
    build:
      context: ../spring-vault-demo
    ports:
      - "8080:8080"
    environment:
      - SPRING_CLOUD_VAULT_HOST=vault
      - SPRING_CLOUD_VAULT_APP_ROLE_ROLE_ID=${APPROLE_ROLE_ID}
      - SPRING_CLOUD_VAULT_APP_ROLE_SECRET_ID=${APPROLE_SECRET_ID}
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/demo?allowPublicKeyRetrieval=true&useSSL=false
    entrypoint: "java -jar /app/spring-vault-demo-0.0.1-SNAPSHOT.jar"
    networks:
      - vault-demo



