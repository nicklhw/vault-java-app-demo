version: '3.7'

networks:
  vault-demo:
    ipam:
      driver: default
      config:
        - subnet: "10.5.0.0/16"

services:
  vault:
    profiles: ["backend"]
    depends_on: [ mysql ]
    image: hashicorp/vault-enterprise:latest
    restart: always
    volumes:
      - ./vault:/vault/config:rw
      - ./vault/audit_logs:/var/log/vault:rw
      - /vault/data
    ports:
      - "8200:8200/tcp"
    cap_add:
      - IPC_LOCK
    container_name: vault
    entrypoint: "vault server -config=/vault/config"
    environment:
      - VAULT_LICENSE=${VAULT_LICENSE}
    networks:
      - vault-demo
  mysql:
    profiles: ["backend"]
    image: mysql:8
    container_name: mysql
    restart: always
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306/tcp"
    environment:
      - MYSQL_DATABASE=demo
      - MYSQL_ROOT_PASSWORD=passw0rd
    networks:
      - vault-demo
  vault-agent:
    profiles: ["frontend"]
    image: hashicorp/vault-enterprise:latest
    restart: always
    depends_on: [ vault ]
    volumes:
      - ./vault-agent/:/vault/config
    ports:
      - "8100:8100/tcp"
    cap_add:
      - IPC_LOCK
    container_name: vault-agent
    entrypoint: "vault agent -config=/vault/config/agent.hcl"
    environment:
      - VAULT_LICENSE=${VAULT_LICENSE}
    networks:
      - vault-demo
#  spring-demo-app:
#    profiles: ["frontend"]
#    image: nicklhw/transform-demo-api
#    container_name: transform-demo-api
#    restart: always
#    depends_on: [vault-agent]
#    build:
#      context: ../demo-api
#    ports:
#      - "8081:8080"
#    environment:
#      - SPRING_CLOUD_VAULT_HOST=vault-agent
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/demo?allowPublicKeyRetrieval=true&useSSL=false
#    entrypoint: "java -jar /app/transform-demo-api-0.0.1-SNAPSHOT.jar"
#    networks:
#      - vault-demo



